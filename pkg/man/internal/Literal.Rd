% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/Literal.R
\docType{class}
\name{Literal-class}
\alias{Literal}
\alias{Literal-class}
\alias{initialize,Literal-method}
\alias{is.Literal}
\alias{is.Literal,ANY-method}
\alias{is.Literal,Literal-method}
\title{Represent a numeric literal by a symbol, extends Symbol}
\usage{
\S4method{initialize}{Literal}(.Object, value)

is.Literal(object)

\S4method{is.Literal}{ANY}(object)

\S4method{is.Literal}{Literal}(object)

Literal(value)
}
\arguments{
\item{.Object}{Instance derived from class Literal}

\item{value}{Numeric value, also serving as symbol name}

\item{object}{Any object}

\item{object}{Any object (except an instance derived from Literal)}

\item{object}{An instance derived from Literal}

\item{value}{Numeric value, also serving as symbol name}
}
\value{
object instance

True if object is an instance of class Effect

Always false

Always true

A new instance of class Literal
}
\description{
Represent a numeric literal by a symbol, extends Symbol

Initialize method for instances of class Literal

Generic method Is.Effect

Tests if object is an instance of class Literal

Tests if object is an instance of class Literal

Literal constructor
}

